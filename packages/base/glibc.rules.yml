{%- extends "templates/default.rules.yml" -%}

{% block build_distclean_arch -%}
"build_distclean_{{arch|ymlqe}}":
  reqs: 
  - [dev/gcc, "build_bootstrap_{{arch|ymlqe}}"]
  cmd: |
    rm -fr 'build/{{arch|shsqe}}/{{package|shsqe}}/{{source_dir|shsqe}}-dist'
{%- endblock %}

{% block build_dist1_arch -%}
"build_dist1_{{arch|ymlqe}}":
  reqs: 
  - "build_distclean_{{arch|ymlqe}}"
{%- endblock %}

{% block build_dist2_arch -%}
"build_dist2_{{arch|ymlqe}}":
  reqs: ["build_dist1_{{arch|ymlqe}}"]
  cmd: |
    saved_cwd="`pwd`"
    mkdir -p 'build/{{arch|shsqe}}/{{package|shsqe}}/{{source_dir|shsqe}}-dist' && \
    cd 'build/{{arch|shsqe}}/{{package|shsqe}}/{{source_dir|shsqe}}-dist' && \
    echo "libc_cv_forced_unwind=yes" > config.cache && \
    echo "libc_cv_c_cleanup=yes" >> config.cache && \
{%- if arch == "arm" %}
    echo "libc_cv_arm_pcs_vfp=no" >> config.cache && \
{%- elif arch == "armhf" %}
    echo "libc_cv_arm_pcs_vfp=yes" >> config.cache && \
{%- endif %}
    cd "$saved_cwd" && \
    cd 'build/{{arch|shsqe}}/{{package|shsqe}}/{{source_dir|shsqe}}' && \
    {{configure_for_autoconf(
        (autoconf_args or []) + [
            "--config-cache"
        ],
        {
            "PKG_CONFIG_SYSROOT_DIR": work_dir + "/sysroot/" + arch
        },
        prefix = "/usr",
        host = target,
        enable_multilib = enable_multilib,
        disable_multilib = disable_multilib,
        enable_nls = enable_nls,
        disable_nls = disable_nls,
        enable_shared = enable_shared,
        disable_shared = disable_shared,
        enable_static = enable_static,
        disable_static = disable_static,
        build_dir = work_dir + "/build/" + arch + "/" + package + "/" + source_dir + "-dist",
        toolchain_dir = work_dir + "/toolchain/" + arch,
        pkg_config = work_dir + "/toolchain/" + arch + "/bin/pkg-config",
        cpp = work_dir + "/bootstrap/" + arch + "/bin/" + target + "-cpp",
        cc = work_dir + "/bootstrap/" + arch + "/bin/" + target + "-gcc",
        ldflags = fix_ldflags and rpath_link_ldflags,
        cxx = work_dir + "/bootstrap/" + arch + "/bin/" + target + "-g++",
        fc = work_dir + "/bootstrap/" + arch + "/bin/" + target + "-gfortran")}} && \
    {{make()}} && \
    {{make(["install", "install_root=" + work_dir + "/dist/" + arch + "/packages/" + package])}} && \
    {{leave_from_build_dir_for_autoconf()}} && \
    cd "$saved_cwd"
{%- endblock %}

{% block build_dist6_arch -%}
"build_dist6_{{arch|ymlqe}}":
  reqs: ["build_dist5_{{arch|ymlqe}}"]
  cmd: |
    saved_cwd="`pwd`"
    cd 'dist/{{arch|shsqe}}/packages/{{package|shsqe}}' && \
    {
        for file in usr/include/gnu/*; do
            case "$file" in
            usr/include/gnu/lib-names.h) ;;
            usr/include/gnu/libc-version.h) ;;
            usr/include/gnu/stubs.h) ;;
            *)
                mkdir -p "$saved_cwd/sysroot/"'{{arch|shsqe}}'"/`dirname "$file"`" || exit 1
                ln -s "`pwd`/$file" "$saved_cwd/sysroot/"'{{arch|shsqe}}'"/$file" || exit 1
                ;;
            esac
        done
    } && \
    cd "$saved_cwd" && \
    '{{package_collection_dir|shsqe}}/scripts/sysroot.sh' \
        '{{arch|shsqe}}' \
        '{{package|shsqe}}' \
        ln lib
{%- endblock %}

{% block clean_dist -%}
clean_dist:
  phony: true
{%- endblock %}

{% block rules -%}
"build_headersclean_{{arch|ymlqe}}":
  reqs:
  - [dev/gcc, "build_bootstrap1_{{arch|ymlqe}}"]
{%- for depend in (depends or []) %}
  - ["{{depend|ymlqe}}", "build_dist_{{arch|ymlqe}}"]
{%- endfor %}
  cmd: |
    '{{package_collection_dir|shsqe}}/scripts/sysroot.sh' \
        '{{arch|shsqe}}' \
        '{{package|shsqe}}' \
        rm all
    rm -fr 'build/{{arch|shsqe}}/{{package|shsqe}}/{{source_dir|shsqe}}-headers'
    rm -fr 'dist/{{arch|shsqe}}/packages/{{package|shsqe}}'
    rm -f 'dist/{{arch|shsqe}}/packages/{{package|shsqe}}.suid_files'

"build_headers1_{{arch|ymlqe}}":
  reqs:
  - "build_headersclean_{{arch|ymlqe}}"
  - "extract_{{arch|ymlqe}}"
  cmd: |
    saved_cwd="`pwd`"
    mkdir -p 'build/{{arch|shsqe}}/{{package|shsqe}}/{{source_dir|shsqe}}-headers' && \
    cd 'build/{{arch|shsqe}}/{{package|shsqe}}/{{source_dir|shsqe}}-headers' && \
    echo "libc_cv_forced_unwind=yes" > config.cache && \
    echo "libc_cv_c_cleanup=yes" >> config.cache && \
{%- if arch == "arm" %}
    echo "libc_cv_arm_pcs_vfp=no" >> config.cache && \
{%- elif arch == "armhf" %}
    echo "libc_cv_arm_pcs_vfp=yes" >> config.cache && \
{%- endif %}
    cd "$saved_cwd" && \
    cd 'build/{{arch|shsqe}}/{{package|shsqe}}/{{source_dir|shsqe}}' && \
    {{configure_for_autoconf(
        (autoconf_args or []) + [
            "--config-cache",
            "--with-headers=" + work_dir + "/sysroot/" + arch + "/usr/include"
        ],
        {
            "PKG_CONFIG_SYSROOT_DIR": work_dir + "/sysroot/" + arch
        },
        prefix = "/usr",
        host = target,
        enable_multilib = enable_multilib,
        disable_multilib = disable_multilib,
        enable_nls = enable_nls,
        disable_nls = disable_nls,
        enable_shared = enable_shared,
        disable_shared = disable_shared,
        enable_static = enable_static,
        disable_static = disable_static,
        build_dir = work_dir + "/build/" + arch + "/" + package + "/" + source_dir + "-headers",
        toolchain_dir = work_dir + "/toolchain/" + arch,
        pkg_config = work_dir + "/toolchain/" + arch + "/bin/pkg-config",
        cpp = work_dir + "/bootstrap/" + arch + "/bin/" + target + "-cpp",
        cc = work_dir + "/bootstrap/" + arch + "/bin/" + target + "-gcc",
        ldflags = fix_ldflags and rpath_link_ldflags,
        cxx = work_dir + "/bootstrap/" + arch + "/bin/" + target + "-g++",
        fc = work_dir + "/bootstrap/" + arch + "/bin/" + target + "-gfortran")}} && \
    {{make(["install-headers", "install_root=" + work_dir + "/dist/" + arch + "/packages/" + package,
        "cross_compiling=yes"])}} && \
    {{leave_from_build_dir_for_autoconf()}} && \
    cd "$saved_cwd"

"build_headers2_{{arch|ymlqe}}":
  reqs: ["build_headers1_{{arch|ymlqe}}"]
  cmd: |
    mkdir -p 'dist/{{arch|shsqe}}/packages/{{package|shsqe}}/usr/include/gnu' && \
    echo -n > 'dist/{{arch|shsqe}}/packages/{{package|shsqe}}/usr/include/gnu/stubs.h' && \
    '{{package_collection_dir|shsqe}}/scripts/sysroot.sh' \
        '{{arch|shsqe}}' \
        '{{package|shsqe}}' \
        ln include

"build_headers_{{arch|ymlqe}}":
  reqs: ["build_headers2_{{arch|ymlqe}}"]
  
clean_glibc:
  phony: true
  unmake:
  - "build_headersclean_{{arch|ymlqe}}"
  - "build_headers1_{{arch|ymlqe}}"
  - "build_headers2_{{arch|ymlqe}}"
  - "build_headers_{{arch|ymlqe}}"
  - "build_distclean_{{arch|ymlqe}}"
  - "build_dist1_{{arch|ymlqe}}"
  - "build_dist2_{{arch|ymlqe}}"
  - "build_dist3_{{arch|ymlqe}}"
  - "build_dist4_{{arch|ymlqe}}"
  - "build_dist5_{{arch|ymlqe}}"
  - "build_dist6_{{arch|ymlqe}}"
  - "build_dist7_{{arch|ymlqe}}"
  - "build_dist_{{arch|ymlqe}}"
  cmd: |
    '{{package_collection_dir|shsqe}}/scripts/sysroot.sh' \
        '{{arch|shsqe}}' \
        '{{package|shsqe}}' \
        rm all
    rm -fr 'build/{{arch|shsqe}}/{{package|shsqe}}/{{source_dir|shsqe}}-headers'
    rm -fr 'build/{{arch|shsqe}}/{{package|shsqe}}/{{source_dir|shsqe}}-dist'
    rm -fr 'dist/{{arch|shsqe}}/packages/{{package|shsqe}}'
    rm -f 'dist/{{arch|shsqe}}/packages/{{package|shsqe}}.suid_files'
{%- endblock %}
