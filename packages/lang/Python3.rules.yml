{%- extends "templates/default.rules.yml" -%}

{%- set short_version = version[0:version.rindex('.')] -%}

{% block build_distclean_arch -%}
"build_distclean_{{arch|ymlqe}}":
  reqs:
  - [toolchain, "build_toolchain_{{arch|ymlqe}}"]
{%- for depend in (depends or []) %}
  - ["{{depend|ymlqe}}", "build_dist_{{arch|ymlqe}}"]
{%- endfor %}
  cmd: |
    '{{package_collection_dir|shsqe}}/scripts/sysroot.sh' \
        '{{arch|shsqe}}' \
        '{{package|shsqe}}' \
        rm all
    rm -fr 'build/{{arch|shsqe}}/{{package|shsqe}}/{{source_dir|shsqe}}-host'
    rm -fr 'build/{{arch|shsqe}}/{{package|shsqe}}/{{source_dir|shsqe}}-dist'
    rm -fr 'build/{{arch|shsqe}}/{{package|shsqe}}/python-bin-host'
    rm -fr 'dist/{{arch|shsqe}}/packages/{{package|shsqe}}'
    rm -f 'dist/{{arch|shsqe}}/packages/{{package|shsqe}}.suid_files'
{%- endblock %}

{% block build_dist2_arch -%}
"build_dist2_{{arch|ymlqe}}":
  reqs: ["build_dist1_{{arch|ymlqe}}"]
  cmd: |
    saved_cwd="`pwd`"
    cd 'build/{{arch|shsqe}}/{{package|shsqe}}/{{source_dir|shsqe}}' && \
    {{configure_for_autoconf(
        host_autoconf_args or [],
        prefix = work_dir + "/build/" + arch + "/" + package + "/python-bin-host",
        build_dir = work_dir + "/build/" + arch + "/" + package + "/" + source_dir + "-host")}} && \
    {{make()}} && \
    {{make(["install"])}} && \
    {{leave_from_build_dir_for_autoconf()}} && \
    cd "$saved_cwd" && \
    mkdir -p 'build/{{arch|shsqe}}/{{package|shsqe}}/{{source_dir|shsqe}}-dist' && \
    cd 'build/{{arch|shsqe}}/{{package|shsqe}}/{{source_dir|shsqe}}-dist' && \
    echo "ac_cv_have_long_long_format=yes" > config.cache && \
    echo "ac_cv_file__dev_ptmx=yes" >> config.cache && \
    echo "ac_cv_file__dev_ptc=yes" >> config.cache && \
    echo "ac_cv_working_tzset=yes" >> config.cache && \
    cd "$saved_cwd" && \
    cd 'build/{{arch|shsqe}}/{{package|shsqe}}/{{source_dir|shsqe}}' && \
    {{configure_for_autoconf(
        (autoconf_args or []) + [
            "--config-cache",
            "--with-openssl=" + work_dir + "/sysroot/" + arch + "/usr"
        ],
        {
            "PKG_CONFIG_SYSROOT_DIR": work_dir + "/sysroot/" + arch,
            "PYTHON_FOR_BUILD": (
                "_PYTHON_PROJECT_BASE=" + work_dir + "/build/" + arch + "/" + package + "/" + source_dir + "-dist " +
                "_PYTHON_HOST_PLATFORM=linux2-" + target_arch + " " +
                "PYTHONPATH=" +
                work_dir + "/build/" + arch + "/" + package + "/" + source_dir + "-dist/build/lib.linux2-" + target_arch + "-" + short_version + ":" +
                work_dir + "/build/" + arch + "/" + package + "/" + source_dir + "/Lib:" +
                work_dir + "/build/" + arch + "/" + package + "/" + source_dir + "/Lib/plat-linux " +
                "DONT_ADD_INCLUDEDIR_AND_LIBDIR=yes " +
                work_dir + "/build/" + arch + "/" + package + "/python-bin-host/bin/python3"
            ),
            "READELF": work_dir + "/toolchain/" + arch + "/bin/" + target + "-readelf"
        },
        prefix = "/usr",
        host = target,
        enable_multilib = enable_multilib,
        disable_multilib = disable_multilib,
        enable_nls = enable_nls,
        disable_nls = disable_nls,
        enable_shared = enable_shared,
        disable_shared = disable_shared,
        enable_static = enable_static,
        disable_static = disable_static,
        build_dir = work_dir + "/build/" + arch + "/" + package + "/" + source_dir + "-dist",
        toolchain_dir = work_dir + "/toolchain/" + arch,
        pkg_config = work_dir + "/toolchain/" + arch + "/bin/pkg-config",
        ldflags = fix_ldflags and rpath_link_ldflags)}} && \
{%- if fix_libtool %}
    sed -i 's/^hardcode_libdir_flag_spec=.*/hardcode_libdir_flag_spec=""/' libtool && \
    sed -i 's/^runpath_var=.*/runpath_var=""/' libtool && \
{%- endif %}
    {{make(["DONT_COMPILE_PYC_AND_PYO=yes"])}} && \
    {{make(["install", "DESTDIR=" + work_dir + "/dist/" + arch + "/packages/" + package,
        "DONT_COMPILE_PYC_AND_PYO=yes"])}} && \
    {{leave_from_build_dir_for_autoconf()}} && \
    cd "$saved_cwd"
{%- endblock %}

{% block build_dist3_arch -%}
"build_dist3_{{arch|ymlqe}}":
  reqs: ["build_dist2_{{arch|ymlqe}}"]
  cmd: |
    saved_cwd="`pwd`"
    cd 'dist/{{arch|shsqe}}/packages/{{package|shsqe}}' && \
    rm -f usr/bin/2to3 && \
    cd "$saved_cwd"
{%- endblock %}

{% block clean_dist -%}
clean_dist:
  phony: true
  unmake:
  - "build_distclean_{{arch|ymlqe}}"
  - "build_dist1_{{arch|ymlqe}}"
  - "build_dist2_{{arch|ymlqe}}"
  - "build_dist3_{{arch|ymlqe}}"
  - "build_dist4_{{arch|ymlqe}}"
  - "build_dist5_{{arch|ymlqe}}"
  - "build_dist6_{{arch|ymlqe}}"
  - "build_dist7_{{arch|ymlqe}}"
  - "build_dist_{{arch|ymlqe}}"
  cmd: |
    '{{package_collection_dir|shsqe}}/scripts/sysroot.sh' \
        '{{arch|shsqe}}' \
        '{{package|shsqe}}' \
        rm all
    rm -fr 'build/{{arch|shsqe}}/{{package|shsqe}}/{{source_dir|shsqe}}-host'
    rm -fr 'build/{{arch|shsqe}}/{{package|shsqe}}/{{source_dir|shsqe}}-dist'
    rm -fr 'build/{{arch|shsqe}}/{{package|shsqe}}/python-bin-host'
    rm -fr 'dist/{{arch|shsqe}}/packages/{{package|shsqe}}'
    rm -f 'dist/{{arch|shsqe}}/packages/{{package|shsqe}}.suid_files'
{%- endblock %}
