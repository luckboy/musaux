{%- extends "templates/base.rules.yml" -%}

{%- set source_name = source_name or name -%}
{%- set source_file = source_file or (source_name + "-" + version + "." + ext) -%}
{%- set source_dir = source_dir or (source_name + "-" + version) -%}

{%- if not no_doc_files -%}
{%- if not doc_files -%}
{%- set doc_files = [
    "AUTHORS", "COPYING", "COPYRIGHT", "CREDITS", "ChangeLog", "LICENSE", "NEWS", "README", "THANKS",
    "TODO"
] + (additional_doc_files or []) -%}
{%- endif -%}
{%- endif %}

{% block base_rules -%}
{% block download -%}
download:
  cmd: |
    '{{package_collection_dir|shsqe}}/scripts/download.sh' \
        '{{package|shsqe}}' \
        '{{url|shsqe}}' \
        '{{source_file|shsqe}}' \
        '{{source_file_sha256|shsqe}}'
{%- endblock %}

{% block extract_arch -%}
"extract_{{arch|ymlqe}}":
  reqs: [download]
  cmd: |
    '{{package_collection_dir|shsqe}}/scripts/extract.sh' \
        '{{package_collection_dir|shsqe}}' \
        '{{arch|shsqe}}' \
        '{{package|shsqe}}' \
        '{{source_file|shsqe}}' \
        '{{source_dir|shsqe}}' \
        '{{version|shsqe}}'
{%- endblock %}

extract:
  phony: true
  reqs: ["extract_{{arch|ymlqe}}"]

{% block build_distclean_arch -%}
"build_distclean_{{arch|ymlqe}}":
  reqs:
  - [toolchain, "build_toolchain_{{arch|ymlqe}}"]
{%- for depend in (depends or []) %}
  - ["{{depend|ymlqe}}", "build_dist_{{arch|ymlqe}}"]
{%- endfor %}
{%- if not toolchain %}
  unmake: ["extract_{{arch|ymlqe}}"]
{%- endif %}
  cmd: |
    '{{package_collection_dir|shsqe}}/scripts/sysroot.sh' \
        '{{arch|shsqe}}' \
        '{{package|shsqe}}' \
        rm all
{%- if toolchain %}
    rm -fr 'build/{{arch|shsqe}}/{{package|shsqe}}/{{source_dir|shsqe}}-dist'
{%- else %}
    rm -fr 'build/{{arch|shsqe}}/{{package|shsqe}}/{{source_dir|shsqe}}'
{%- endif %}
    rm -fr 'dist/{{arch|shsqe}}/packages/{{package|shsqe}}'
    rm -f 'dist/{{arch|shsqe}}/packages/{{package|shsqe}}.suid_files'
{%- endblock %}

{% block build_dist1_arch -%}
"build_dist1_{{arch|ymlqe}}":
  reqs: 
  - "build_distclean_{{arch|ymlqe}}"
  - "extract_{{arch|ymlqe}}"
{%- endblock %}

{% block build_dist2_arch -%}
"build_dist2_{{arch|ymlqe}}":
  reqs: ["build_dist1_{{arch|ymlqe}}"]
  cmd: |
    saved_cwd="`pwd`"
    cd 'build/{{arch|shsqe}}/{{package|shsqe}}/{{source_dir|shsqe}}' && \
{%- if autoconf %}
    {{configure_for_autoconf(
        autoconf_args or [],
        {
            "PKG_CONFIG_SYSROOT_DIR": work_dir + "/sysroot/" + arch
        },
        prefix = "/usr",
        host = target,
        enable_multilib = enable_multilib,
        disable_multilib = disable_multilib,
        enable_nls = enable_nls,
        disable_nls = disable_nls,
        enable_shared = enable_shared,
        disable_shared = disable_shared,
        enable_static = enable_static,
        disable_static = disable_static,
        build_dir = (toolchain or None) and (work_dir + "/build/" + arch + "/" + package + "/" + source_dir + "-dist"),
        toolchain_dir = work_dir + "/toolchain/" + arch,
        pkg_config = work_dir + "/toolchain/" + arch + "/bin/pkg-config",
        ldflags = fix_ldflags and rpath_link_ldflags)}} && \
{%- elif cmake %}
    {{configure_for_cmake(
        cmake_args or [],
        {
            "PKG_CONFIG_SYSROOT_DIR": work_dir + "/sysroot/" + arch
        },
        build_type = "Release",
        prefix = "/usr",
        host = target,
        build_dir = (toolchain or None) and (work_dir + "/build/" + arch + "/" + package + "/" + source_dir + "-dist"),
        toolchain_dir = work_dir + "/toolchain/" + arch,
        find_root_dir = work_dir + "/sysroot/" + arch,
        pkg_config = work_dir + "/toolchain/" + arch + "/bin/pkg-config",
        tmp_dir = work_dir + "/tmp/" + arch + "/build/dist/" + package,
        ldflags = fix_ldflags and rpath_link_ldflags,
        cmake_prog = work_dir + "/toolchain/" + arch + "/bin/cmake")}} && \
{%- else %}
    {{configure(
        {
            "PKG_CONFIG_SYSROOT_DIR": work_dir + "/sysroot/" + arch
        },
        build_type = "Release",
        prefix = "/usr",
        host = target,
        enable_multilib = enable_multilib,
        disable_multilib = disable_multilib,
        enable_nls = enable_nls,
        disable_nls = disable_nls,
        enable_shared = enable_shared,
        disable_shared = disable_shared,
        enable_static = enable_static,
        disable_static = disable_static,
        build_dir = (toolchain or None) and (work_dir + "/build/" + arch + "/" + package + "/" + source_dir + "-dist"),
        toolchain_dir = work_dir + "/toolchain/" + arch,
        find_root_dir = work_dir + "/sysroot/" + arch,
        pkg_config = work_dir + "/toolchain/" + arch + "/bin/pkg-config",
        tmp_dir = work_dir + "/tmp/" + arch + "/build/dist/" + package,
        ldflags = fix_ldflags and rpath_link_ldflags,
        cmake_prog = work_dir + "/toolchain/" + arch + "/bin/cmake")}} && \
{%- endif %}
{%- if fix_libtool %}
    sed -i 's/^hardcode_libdir_flag_spec=.*/hardcode_libdir_flag_spec=""/' libtool && \
    sed -i 's/^runpath_var=.*/runpath_var=""/' libtool && \
{%- endif %}
    {{make()}} && \
    {{make(["install", "DESTDIR=" + work_dir + "/dist/" + arch + "/packages/" + package])}} && \
{%- if autoconf %}
    {{leave_from_build_dir_for_autoconf()}} && \
{%- elif cmake %}
    {{leave_from_build_dir_for_cmake()}} && \
{%- else %}
    {{leave_from_build_dir()}} && \
{%- endif %}
    cd "$saved_cwd"
{%- endblock %}

{% block build_dist3_arch -%}
"build_dist3_{{arch|ymlqe}}":
  reqs: ["build_dist2_{{arch|ymlqe}}"]
{%- endblock %}

{% block build_dist4_arch -%}
"build_dist4_{{arch|ymlqe}}":
  reqs: ["build_dist3_{{arch|ymlqe}}"]
  cmd: |
    '{{package_collection_dir|shsqe}}/scripts/post_build.sh' \
        '{{arch|shsqe}}' \
        '{{package|shsqe}}' \
        '{{name|shsqe}}' \
        '{{source_dir|shsqe}}' \
        '{{doc_dir|shsqe}}'
{%- if doc_files %}
{%- for doc_file in doc_files %} \
        '{{doc_file|shsqe}}'
{%- endfor %}
{%- endif %}
{%- endblock %}

{% block build_dist5_arch -%}
"build_dist5_{{arch|ymlqe}}":
  reqs: ["build_dist4_{{arch|ymlqe}}"]
{%- endblock %}

{% block build_dist6_arch -%}
"build_dist6_{{arch|ymlqe}}":
  reqs: ["build_dist5_{{arch|ymlqe}}"]
  cmd: |
    '{{package_collection_dir|shsqe}}/scripts/sysroot.sh' \
        '{{arch|shsqe}}' \
        '{{package|shsqe}}' \
        ln all
{%- endblock %}

{% block build_dist7_arch -%}
"build_dist7_{{arch|ymlqe}}":
  reqs: ["build_dist6_{{arch|ymlqe}}"]
{%- endblock %}

{% block build_dist_arch -%}
"build_dist_{{arch|ymlqe}}":
  reqs: ["build_dist7_{{arch|ymlqe}}"]
{%- endblock %}

build_dist:
  phony: true
  reqs: ["build_dist_{{arch|ymlqe}}"]

build:
  phony: true
  reqs: [build_dist]

{% block clean_dist -%}
clean_dist:
  phony: true
  unmake:
{%- if not toolchain %}
  - "extract_{{arch|ymlqe}}"
{%- endif %}
  - "build_distclean_{{arch|ymlqe}}"
  - "build_dist1_{{arch|ymlqe}}"
  - "build_dist2_{{arch|ymlqe}}"
  - "build_dist3_{{arch|ymlqe}}"
  - "build_dist4_{{arch|ymlqe}}"
  - "build_dist5_{{arch|ymlqe}}"
  - "build_dist6_{{arch|ymlqe}}"
  - "build_dist7_{{arch|ymlqe}}"
  - "build_dist_{{arch|ymlqe}}"
  cmd: |
    '{{package_collection_dir|shsqe}}/scripts/sysroot.sh' \
        '{{arch|shsqe}}' \
        '{{package|shsqe}}' \
        rm all
{%- if toolchain %}
    rm -fr 'build/{{arch|shsqe}}/{{package|shsqe}}/{{source_dir|shsqe}}-dist'
{%- else %}
    rm -fr 'build/{{arch|shsqe}}/{{package|shsqe}}/{{source_dir|shsqe}}'
{%- endif %}
    rm -fr 'dist/{{arch|shsqe}}/packages/{{package|shsqe}}'
    rm -f 'dist/{{arch|shsqe}}/packages/{{package|shsqe}}.suid_files'
{%- endblock %}

clean:
  phony: true
  reqs: [clean_dist]

{% if toolchain -%}
{% block build_toolchainclean_arch -%}
"build_toolchainclean_{{arch|ymlqe}}":
{%- if toolchain_depends and toolchain_depends != [] %}
  reqs:
{%- for depend in (toolchain_depends or []) %}
  - ["{{depend|ymlqe}}", "build_toolchain_{{arch|ymlqe}}"]
{%- endfor %}
{%- endif %}
  cmd: |
    rm -fr 'build/{{arch|shsqe}}/{{package|shsqe}}/{{source_dir|shsqe}}-toolchain'
{%- endblock %}

{% block build_toolchain1_arch -%}
"build_toolchain1_{{arch|ymlqe}}":
  reqs:
  - "build_toolchainclean_{{arch|ymlqe}}"
  - "extract_{{arch|ymlqe}}"
{%- endblock %}

{% block build_toolchain2_arch -%}
"build_toolchain2_{{arch|ymlqe}}":
  reqs: ["build_toolchain1_{{arch|ymlqe}}"]
  cmd: |
    saved_cwd="`pwd`"
    cd 'build/{{arch|shsqe}}/{{package|shsqe}}/{{source_dir|shsqe}}' && \
{%- if autoconf %}
    {{configure_for_autoconf(
        toolchain_autoconf_args or [],
        prefix = work_dir + "/toolchain/" + arch,
        target = (toolchain_target_opt or None) and target,
        enable_multilib = toolchain_enable_multilib,
        disable_multilib = toolchain_disable_multilib,
        enable_nls = toolchain_enable_nls,
        disable_nls = toolchain_disable_nls,
        enable_shared = toolchain_enable_shared,
        disable_shared = toolchain_disable_shared,
        enable_static = toolchain_enable_static,
        disable_static = toolchain_disable_static,
        build_dir = work_dir + "/build/" + arch + "/" + package + "/" + source_dir + "-toolchain")}} && \
{%- elif cmake %}
    {{configure_for_cmake(
        toolchain_cmake_args or [],
        build_type = "Release",
        prefix = "/usr",
        target = (toolchain_target_opt or None) and target,
        build_dir = work_dir + "/build/" + arch + "/" + package + "/" + source_dir + "-toolchain",
        tmp_dir = work_dir + "/tmp/" + arch + "/build/toolchain/" + package)}} && \
{%- else %}
    {{configure(
        build_type = "Release",
        prefix = work_dir + "/toolchain/" + arch,
        target = (toolchain_target_opt or None) and target,
        enable_multilib = toolchain_enable_multilib,
        disable_multilib = toolchain_disable_multilib,
        enable_nls = toolchain_enable_nls,
        disable_nls = toolchain_disable_nls,
        enable_shared = toolchain_enable_shared,
        disable_shared = toolchain_disable_shared,
        enable_static = toolchain_enable_static,
        disable_static = toolchain_disable_static,
        build_dir = work_dir + "/build/" + arch + "/" + package + "/" + source_dir + "-toolchain",
        tmp_dir = work_dir + "/tmp/" + arch + "/build/toolchain/" + package)}} && \
{%- endif %}
    {{make()}} && \
    {{make(["install"])}} && \
{%- if autoconf %}
    {{leave_from_build_dir_for_autoconf()}} && \
{%- elif cmake %}
    {{leave_from_build_dir_for_cmake()}} && \
{%- else %}
    {{leave_from_build_dir()}} && \
{%- endif %}
    cd "$saved_cwd"
{%- endblock %}

{% block build_toolchain3_arch -%}
"build_toolchain3_{{arch|ymlqe}}":
  reqs: ["build_toolchain2_{{arch|ymlqe}}"]
{%- endblock %}

{% block build_toolchain_arch -%}
"build_toolchain_{{arch|ymlqe}}":
  reqs: ["build_toolchain3_{{arch|ymlqe}}"]
{%- endblock %}

build_toolchain:
  phony: true
  reqs: ["build_toolchain_{{arch|ymlqe}}"]

{% block clean_toolchain -%}
clean_toolchain:
  phony: true
{%- if toolchain_depends and toolchain_depends != [] %}
  reqs:
{%- for depend in (toolchain_depends or []) %}
  - ["{{depend|ymlqe}}", clean_toolchain]
{%- endfor %}
{%- endif %}
  unmake:
  - "build_toolchainclean_{{arch|ymlqe}}"
  - "build_toolchain1_{{arch|ymlqe}}"
  - "build_toolchain2_{{arch|ymlqe}}"
  - "build_toolchain3_{{arch|ymlqe}}"
  - "build_toolchain_{{arch|ymlqe}}"
  cmd: |
    rm -fr 'build/{{arch|shsqe}}/{{package|shsqe}}/{{source_dir|shsqe}}-toolchain'
{%- endblock %}
{%- endif %}

gen_source_file_sha256:
  phony: true
  reqs: [download]
  cmd: |
    sha256="`sha256sum 'download/{{package|shsqe}}/{{source_file|shsqe}}' | cut -d ' ' -f 1`"
    printf "source_file_sha256: '%s'\n" "$sha256" >> '{{package_collection_dir|shsqe}}/packages/{{package|shsqe}}.info.yml'

{% block rules -%}{%- endblock %}
{%- endblock %}
